services:
  postgres:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=${DB_ADMIN_USER}
      - POSTGRES_PASSWORD=${DB_ADMIN_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    command: --max_connections=200
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - ./initdb:/docker-entrypoint-initdb.d
    cpus: 1.0
    mem_limit: 512M

  app:
    image: achmadardian/votes-go-app:${GO_APP_VERSION}
    expose:
      - "8080"
    environment:
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASSWORD=${APP_DB_PASSWORD}
      - APP_DB_HOST=postgres
      - APP_DB_PORT=${APP_DB_PORT}
      - DB_NAME=${DB_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 5
    cpus: 0.25
    mem_limit: 512M

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - app
    ports:
      - "443:443"
      - "80:80"
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
